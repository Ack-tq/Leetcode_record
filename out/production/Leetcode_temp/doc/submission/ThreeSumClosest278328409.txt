class Solution {
    public int threeSumClosest(int[] nums, int target) {
        Arrays.sort(nums);
        int length = nums.length;
        int closest = 100000;

        for(int i = 0; i < length; i++){
            if (i > 0 && nums[i] == nums[i-1]) continue;

            int L = i + 1, R = length - 1;
            while(L < R){
                int sum = nums[i] + nums[L] + nums[R];
                if (sum == target) return target;
                //通过比较sum和closest与target的距离来更新closest的值
                if (Math.abs(sum - target) < Math.abs(closest - target)) closest = sum;
                if (sum < target){
                    int L0 = L + 1;
                    while(L0 < R && nums[L0] == nums[L]) ++L0;
                    L = L0;
                }else{
                    int R0 = R - 1;
                    while(L < R0 && nums[R] == nums[R0]) --R0;
                    R = R0;
                }
            }
        }
        return closest;
    }
}
//runtime:7 ms
//memory:40.7 MB
